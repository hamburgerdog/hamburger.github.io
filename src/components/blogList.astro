---
import { getCollection } from 'astro:content';

// 获取集合中的所有条目。
// 需要集合的名称作为参数。
// 示例：检索 `src/content/blog/**`
const blogCollection = await getCollection('blog');
const tags = blogCollection.flatMap((blog) => blog.data.tags.split(' ')) as string[];
const tagsGroup = tags.reduce((acc: { value: string; total: number }[], cur) => {
	const index = acc.findIndex((item) => item.value === cur);
	if (index === -1) {
		acc.push({ value: cur, total: 1 });
	} else {
		acc[index].total++;
	}
	return acc;
}, []);

const posts = blogCollection.sort((a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());
---

<style lang="scss">
	.quote {
		margin-block-start: 1em;
		margin-block-end: 2em;

		#quote {
			opacity: 0.7;
			font-size: 14px;
			font-style: italic;
			text-decoration: underline;

			&::after {
				content: '...';
			}

			&:hover {
				opacity: 1;
			}
		}
	}

	.theme {
		margin-block-start: 2em;
		margin-block-end: 2em;
	}

	.detail {
		margin-block-start: 2em;
		margin-block-end: 2em;
	}

	.item {
		cursor: pointer;
		opacity: 0.7;
		display: block;
		text-decoration: none;

		&:hover {
			opacity: 1;
		}

		p {
			margin-block-start: 0.2em;
			margin-block-end: 0.2em;
		}

		.title {
			cursor: pointer;
			font-size: 16px;
		}

		.label {
			display: flex;
			gap: 16px;
			font-size: 12px;

			.tags {
				padding: 0px 4px;
				border-radius: 4px;
				background-color: var(--highlight);
			}
		}
	}

	.tag_filter {
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
		font-size: 14px;
	}

	.filter_item {
		cursor: pointer;
		padding: 2px 4px;
		border-radius: 4px;

		margin-block-start: 0em;
		margin-block-end: 0em;

		&.selected {
			background-color: var(--highlight);
		}

		&:hover {
			opacity: 0.8;
		}
	}
</style>

<script>
	document.addEventListener('astro:page-load', async () => {
		const res = await fetch('https://api.github.com/zen');
		(document.querySelector('#quote') as HTMLSpanElement).innerHTML = await res.text();
	});
</script>

<section>
	<div class="quote">
		<p>每日一句</p>
		<span id="quote"></span>
	</div>
	<div class="theme">
		<p>主题</p>
		<div class="tag_filter">
			{
				tagsGroup.map((tag) => (
					<p class="filter_item">
						#{tag.value}({tag.total})
					</p>
				))
			}
		</div>
	</div>
	<div class="detail">
		<p>内容</p>
		{
			posts.map((post) => (
				<>
					<a href={`/blog/${post.slug}`} class="item">
						<p class="title">{post.data.title}</p>
						<div class="label">
							<p class="date">{post.data.date}</p>
							<p class="tags">{post.data.tags.replaceAll(' ', ' | ')}</p>
						</div>
					</a>
					<br />
				</>
			))
		}
	</div>
</section>
