---
import { getCollection } from 'astro:content';

// 获取集合中的所有条目。
// 需要集合的名称作为参数。
// 示例：检索 `src/content/blog/**`
const blogCollection = await getCollection('blog');
const tags = new Set(blogCollection.flatMap((blog) => blog.data.tags.split(' ')));
const posts = blogCollection.sort((a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());
---

<style lang="scss">
	.item {
		cursor: pointer;
		opacity: 0.7;
		display: block;
		text-decoration: none;

		&:hover {
			opacity: 1;
		}

		p {
			margin-block-start: 0.2em;
			margin-block-end: 0.2em;
		}

		.title {
			cursor: pointer;
			font-size: 16px;
		}

		.label {
			display: flex;
			gap: 16px;
			font-size: 12px;

			.tags {
				padding: 0px 4px;
				border-radius: 4px;
				background-color: var(--highlight);
			}
		}
	}

	.tag_filter {
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
		font-size: 16px;
		font-weight: bold;

		margin-block-start: 2em;
		margin-block-end: 2em;
	}

	.filter_item {
		cursor: pointer;
		padding: 2px 4px;
		border-radius: 4px;

		margin-block-start: 0em;
		margin-block-end: 0em;

		&.selected {
			background-color: var(--highlight);
		}

		&:hover {
			opacity: 0.8;
		}
	}
</style>

<section>
	<div class="tag_filter">
		{[...tags].map((tag) => <p class="filter_item">{tag}</p>)}
	</div>
	{
		posts.map((post) => (
			<>
				<a href={`/blog/${post.slug}`} class="item">
					<p class="title">{post.data.title}</p>
					<div class="label">
						<p class="date">{post.data.date}</p>
						<p class="tags">{post.data.tags.replaceAll(' ', '，')}</p>
					</div>
				</a>
				<br />
			</>
		))
	}
</section>
